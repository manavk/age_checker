<?php
/**
 * @file
 * Hook implementations for the age_checker module.
 */
define(
  'AGE_GATE_TEMPLATE_PATH',
  drupal_get_path('module', 'age_checker') . '/templates'
);

define('AGE_CHECKER_VISIBILITY_NOTLISTED', 0);
define('AGE_CHECKER_VISIBILITY_LISTED', 1);

/**
 * Implements hook_init().
 */
function age_checker_init() {

  if (age_checker_show()) {
    $destination = drupal_get_path_alias();
    if ($destination == 'agegate' || $destination == 'node' || !isset($destination))
      $destination = '/';
    $settings = array();
    drupal_add_js(array('age_checker' => $settings), 'setting');

    $visibility = variable_get('age_checker_visibility', AGE_CHECKER_VISIBILITY_NOTLISTED);
    $pages      = variable_get('age_checker_pages', '');
    $verify     = FALSE;

    // Determine if this page should be behind age checker.
    switch ($visibility) {
      case AGE_CHECKER_VISIBILITY_NOTLISTED:
        if (!drupal_match_path(drupal_get_path_alias($_GET['q']), $pages)) {
          $verify = TRUE;
        }
        break;

      case AGE_CHECKER_VISIBILITY_LISTED:
        if (drupal_match_path(drupal_get_path_alias($_GET['q']), $pages)) {
          $verify = TRUE;
        }
        break;
    }
    if ($verify) {

      // default_country
      $selected_country = isset($_COOKIE['country_selected']) ? $_COOKIE['country_selected'] : '';
      if (!isset($selected_country) || $selected_country == '') {
        $selected_country = _get_country_name();
      }

      // Getting the language_code.
      $language_code = _get_language_code();
      
      // Add module variables to JS.
      drupal_add_js(array(
        'age_checker' => array(
          'cookie_expiration' => variable_get('age_checker_cookie_expiration_time', 15),
          'currentdate'       => date("Y/m/d", time()),
          'threshold_age'     => variable_get($selected_country . '_threshold_ages'),
          'redirecturl'       => variable_get('under_age_url', '/'),
          'blank_err_message' => variable_get($language_code . '_age_checker_blank_error_msg', ''),
          'dateformat_error'  => variable_get($language_code . '_age_checker_dateformat_error_msg', ''),
          'under_age_err_msg' => variable_get($language_code . '_age_checker_underage_error_msg', ''),
          'date_range_err_msg' => variable_get($language_code . '_age_checker_daterange_error_msg', ''),
          'destination' => $destination,
          'verify' => $verify,
          'day_placeholder' => variable_get($selected_country . '_day_placeholder'),
          'month_placeholder' => variable_get($selected_country . '_month_placeholder'),
          'year_placeholder' => variable_get($selected_country . '_year_placeholder'),
        )), 'setting');
    }
  }
}

/**
 * Calculate visibility of age checker if set.
 *
 * Function copy from block.module, thanks for the original code.
 *
 * return boolean
 */
function _age_checker_visibility() {

  $visibility = variable_get('age_checker_visibility', AGE_CHECKER_VISIBILITY_NOTLISTED);
  $pages = variable_get('age_checker_pages');
  // Convert path to lowercase. This allows comparison of the same path
  // with different case. Ex: /Page, /page, /PAGE.
  $pages = drupal_strtolower($pages);
  if ($visibility < 2) {
    // Convert the Drupal path to lowercase.
    $path = drupal_strtolower(drupal_get_path_alias($_GET['q']));
    // Compare the lowercase internal and lowercase path alias (if any).
    $page_match = drupal_match_path($path, $pages);

    if ($path != $_GET['q']) {
      $page_match = $page_match || drupal_match_path($_GET['q'], $pages);
    }
    // When $visibility has a value of 0,
    // the age checker is displayed on all pages except those listed in $pages.
    // When set to 1, it is displayed only on those
    // pages listed in $pages.
    $page_match = !($visibility xor $page_match);
  }
  elseif (module_exists('php')) {
    $page_match = php_eval($pages);
  }
  else {
    $page_match = FALSE;
  }
  return $page_match;
}

/**
 * Function to control age checker display depending user and accesses.
 *
 * @return bool
 *   True if must be shown
 */
function age_checker_show() {
  // User Access.
  if ((!user_access('administrator')) && (_age_checker_visibility() == 1)) {
    return TRUE;
  }
  return FALSE;
}

/**
 * Implements hook_menu().
 */
function age_checker_menu() {
  $items['admin/config/people/age_checker'] = array(
    'title'            => 'General Settings',
    'description'      => 'General configuration of Age Checker Module',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('age_checker_admin_form'),
    'access callback'  => 'user_access',
    'access arguments' => array('administer age checker settings'),
    'file'             => 'age_checker.admin.inc',
  );

  $items['admin/config/people/age_checker/settings'] = array(
    'title'            => 'General Settings',
    'description'      => 'General configuration of Age Checker Module',
    'type'             => MENU_DEFAULT_LOCAL_TASK,
    'weight'           => 0,
  );

  $items['admin/config/people/age_checker/mapping'] = array(
    'title'            => 'Language and Country Mapping',
    'description'      => 'Language to country mapping will take place.',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('age_checker_mapping_admin_form'),
    'access callback'  => 'user_access',
    'access arguments' => array('administer age checker settings'),
    'file'             => 'age_checker.admin.inc',
    'type'             => MENU_LOCAL_TASK,
    'weight'           => 1,
  );

  $items['admin/config/people/age_checker/country_configuration'] = array(
    'title'            => 'Country Configuration',
    'description'      => 'Country Configuration',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('age_checker_country_configuration'),
    'access callback'  => 'user_access',
    'access arguments' => array('administer age checker settings'),
    'file'             => 'age_checker.admin.inc',
    'type'             => MENU_LOCAL_TASK,
    'weight'           => 2,
  );

  $items['agegate'] = array(
    'page callback'    => 'agechecker_template',
    'access callback'  => TRUE,
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function age_checker_permission() {
  return array(
    'administer age checker settings' => array(
      'title'       => t('administer age checker settings'),
      'description' => t('Full administration access, only for admin.'),
    ),
  );
}
/**
 * Function for age checker form.
 */
function age_checker_form($form,&$form_submit) {

  // Getting the langauge_code
  $language_code = _get_language_code();

  // default_country
  $selected_country = isset($_COOKIE['country_selected']) ? $_COOKIE['country_selected'] : '';
  if (!isset($selected_country) || $selected_country == '') {
    $selected_country = _get_country_name();
  }

  //country list
  $countries = variable_get('countries', '');
  $countries = explode("\n", $countries);
  $country_options = array();
  foreach ($countries as $country) {
    $country = explode('|', $country);
    $country_options[$country[0]] = $country[1];
    $result = array_map('trim', $country_options);
  }
  if(count($result) > 1) {
    $form['list_of_countries'] = array(
      '#type'          => 'select',
      '#title'         => variable_get($language_code . '_select_list_label'),
      '#options'       => $result,
      '#weight'        => -1,
      '#id'            => 'age_checker_country',
      '#default_value' => $selected_country,
      '#attributes'    => array(
        'tabindex'     => '1',
      ),
    );
  }

  $form['age_checker_error_message'] = array(
    '#type'   => 'markup',
    '#markup' => '<div class="age_checker_error_message"> </div>',
    '#weight' => 0,
  );

  // Day form Element.
  $form['day'] = array(
    '#type'         => 'textfield',
    '#size'         => 2,
    '#maxlength'    => 2,
    '#id'           => 'age_checker_day',
    '#weight'       => variable_get($selected_country . '_day_weight'),
    '#required'     => TRUE,
    '#attributes'   => array(
      'pattern'     => "[0-9]*",
      'tabindex'    => '2',
      'placeholder' => variable_get($selected_country . '_day_placeholder'),
    ),
  );

  // Month form Element.
  $form['month'] = array(
    '#type'          => 'textfield',
    '#size'          => 2,
    '#maxlength'     => 2,
    '#id'            => 'age_checker_month',
    '#required'      => TRUE,
    '#weight'        => variable_get($selected_country . '_month_weight'),
    '#attributes'    => array(
      'pattern'      => "[0-9]*",
      'tabindex'     => '3',
      'placeholder'  => variable_get($selected_country . '_month_placeholder'),
    ),
  );

  // Year form Element.
  $form['year'] = array(
    '#type'          => 'textfield',
    '#size'          => 4,
    '#maxlength'     => 4,
    '#id'            => 'age_checker_year',
    '#weight'        => variable_get($selected_country . '_year_weight'),
    '#required'      => TRUE,
    '#attributes'    => array(
      'pattern'      => "[0-9]*",
      'tabindex'     => '4',
      'placeholder'  => variable_get($selected_country . '_year_placeholder'),
    ),
  );

  // Remember Me Checkbox.
  $option_remember_me = variable_get('option_remember_me');
  if ($option_remember_me == 1) {
    $form['remember_me'] = array(
      '#type'          => 'checkbox',
      '#weight'        => 5,
      '#id'            => 'age_checker_remember_me',
      '#title'         => variable_get($language_code . '_remember_me_text'),
      '#default_value' => 0,
      '#attributes'    => array(
        'tabindex'     => '5',
      ),
    );
  }
  //submit button
  $form['submit'] = array(
    '#type'       => 'submit',
    '#value'      => variable_get($language_code . '_age_checker_button_text'),
    '#weight'     => 6,
    '#attributes' => array(
      'onclick'   => "age_checker.verify();",
      'tabindex'  => '6',
    ),
   );

  $form['#attributes']['onsubmit'] = 'return false;';
  return $form;
}

/**
 * Implements hook_theme().
 */
function age_checker_theme($existing, $type, $theme, $path) {
  return array(
    'age_checker' => array(
      'path' => AGE_GATE_TEMPLATE_PATH,
      'template' => 'age_checker',
      'variables' => array(
        'age_checker_header_message' => NULL,
        'age_checker_form' => NULL,
        'age_checker_footer_message' => NULL,
      ),
    ),
    'age_checker_page' => array(
      'template' => 'templates/age-checker-page',
      'render element' => 'page',
      'variables' => array(
        'age_cheker_background_img' => NULL,
        'age_cheker_logo' => NULL,
        'footer_links' => NULL,
      )
    ),
  );
}

/**
 * Function agechecker_template
 */
function agechecker_template() {
  
  // Getting the language Code.
  $language_code = _get_language_code();

  // Header text of the form.
  $age_checker_header_message = variable_get($language_code . '_age_checker_header_message');
  
  // Form Element.
  $age_checker_form = drupal_get_form('age_checker_form');
  
  // Footer text of the form.
  $age_checker_footer_message = variable_get($language_code . '_age_gate_footer');

  // sending variable to template
  return theme('age_checker', 
    array(
    'age_checker_header_message' => $age_checker_header_message, 
    'age_checker_form' => $age_checker_form,
    'age_checker_footer_message' => $age_checker_footer_message,
  ));
}

// Getting the language_code on the basis of Country selected.
function _get_language_code() {

  $languages_options = array();
  $languages = variable_get('language', '');
  $languages = explode("\n", $languages);
  foreach ($languages as $language) {
    $language = explode('|', $language);
    $languages_options[$language[0]] = $language[1];
    $languages_result = array_map('trim', $languages_options);
  }

  $selected_country = isset($_COOKIE['country_selected']) ? $_COOKIE['country_selected'] : '';
  if (!isset($selected_country) || $selected_country == '') {
    $selected_country = _get_country_name();
  }

  foreach ($languages_result as $key => $value) {
    $countries_array = variable_get($key . '_country_list');
    foreach($countries_array as $country) {
      if ($country == $selected_country){
        return $key;
      }
    }
  }
}

function _get_country_name() {

  $ip_address = ip_address();

  $url = variable_get('geoip_link') . $ip_address;
  $geoip_data = _get_geoip_data($url);
  if(is_object($geoip_data)) {
    $country_code = $geoip_data->country_code;
    $countries = variable_get('countries', '');
    $countries = explode("\n", $countries);
    foreach ($countries as $country) {
      $country_array = explode('|', $country);
      $country_list[$country_array[0]] = $country_array[1];
    }
    $country_name = isset($country_list[$country_code]) ? $country_list[$country_code] : '';
    if (isset($country_name) || $country_name !== '') {
      $country_name = $country_code;
    }
    else {
      $country_name = variable_get('default_country');
    }
  }
  else {
    $country_name = variable_get('default_country');
  }

  $country_name_po[$ip_address] = $country_name;

  return $country_name;
}

/**
 * Implements a function to get country name.
 */
function _get_geoip_data($url) {

  // Free GeoIP configuration.
  $request = drupal_http_request($url);
  if ((is_object($request)) && (isset($request->data))) {
    $response = json_decode($request->data);
    if (!is_object($response) || $response->country_code == 'RD' || $response->country_code == '') {
      return FALSE;
    }
    return $response;
  }
  else{
    return FALSE;
  }
}

/**
 * @param $variables
 */
function age_checker_preprocess_page(&$variables){

  // Background image
  $age_gate_background_image = '';
  $fid_bgimg = variable_get('age_checker_background_image');
  if ($fid_bgimg) {
    $file_bgimg = file_load($fid_bgimg);
    $uri_bgimg  = $file_bgimg->uri;
    $age_gate_background_image = theme('image', array('path' => $uri_bgimg));
  }

  // Logo
  $age_gate_logo = '';
  $fid_logo = variable_get('age_checker_logo');
  if ($fid_logo) {
    $logo_file = file_load($fid_logo);
    $uri_logo  = $logo_file->uri;
    $age_gate_logo = theme('image', array('path' => $uri_logo));
  }

  // Getting the language code.
  $language_code = _get_language_code();

  // Footer variables.
  $footer_variable = variable_get($language_code . '_age_checker_footer_links');
  $footer_array = explode("\n", $footer_variable);
  foreach($footer_array as $footer_links) {
    $footer_link = explode('|', $footer_links);
    $footer[$footer_link[0]] = $footer_link[1];
  }

  if (current_path() == "agegate") {
    $variables['age_cheker_background_img'] = $age_gate_background_image;
    $variables['age_cheker_logo'] = $age_gate_logo;
    $variables['theme_hook_suggestions'][] = 'age_checker_page';
    $variables['footer_links'] = $footer;
  }
}
