<?php
/**
 * @file
 * Hook implementations for the age_checker module.
 */
define(
  'AGE_GATE_TEMPLATE_PATH',
  drupal_get_path('module', 'age_checker') . '/templates'
);

define('AGE_CHECKER_VISIBILITY_NOTLISTED', 0);
define('AGE_CHECKER_VISIBILITY_LISTED', 1);

/**
 * Implements hook_menu().
 */
function age_checker_menu() {
  $items['admin/config/people/age_checker'] = array(
    'title'            => 'General Settings',
    'description'      => 'General configuration of Age Checker Module',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('age_checker_admin_form'),
    'access callback'  => 'user_access',
    'access arguments' => array('administer age checker settings'),
    'file'             => 'age_checker.admin.inc',
  );

  $items['admin/config/people/age_checker/settings'] = array(
    'title'            => 'General Settings',
    'description'      => 'General configuration of Age Checker Module',
    'type'             => MENU_DEFAULT_LOCAL_TASK,
    'weight'           => 0,
  );

  $items['admin/config/people/age_checker/mapping'] = array(
    'title'            => 'Language and Country Mapping',
    'description'      => 'Language to country mapping will take place.',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('age_checker_mapping_admin_form'),
    'access callback'  => 'user_access',
    'access arguments' => array('administer age checker settings'),
    'file'             => 'age_checker.admin.inc',
    'type'             => MENU_LOCAL_TASK,
    'weight'           => 1,
  );

  $items['admin/config/people/age_checker/country_configuration'] = array(
    'title'            => 'Country Configuration',
    'description'      => 'Country Configuration',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('age_checker_country_configuration'),
    'access callback'  => 'user_access',
    'access arguments' => array('administer age checker settings'),
    'file'             => 'age_checker.admin.inc',
    'type'             => MENU_LOCAL_TASK,
    'weight'           => 2,
  );

  $items['agegate'] = array(
    'page callback'    => 'agechecker_template',
    'access callback'  => TRUE,
    );
  return $items;
}

/**
 * Implements hook_permission().
 */
function age_checker_permission() {
  return array(
    'administer age checker settings' => array(
      'title'       => t('administer age checker settings'),
      'description' => t('Full administration access, only for admin.'),
    ),
  );
}
/**
 * Function for age checker form.
 */
function age_checker_form($form,&$form_submit) {

  // default_country
  $selected_country = isset($_COOKIE['country_selected']) ? $_COOKIE['country_selected'] : '';
  if (!isset($selected_country) || $selected_country == '') {
    $selected_country = _get_country_name();
  }

  //country list
  $countries = variable_get('countries', '');
  $countries = explode("\n", $countries);
  $country_options = array();
  foreach ($countries as $country) {
    $country = explode('|', $country);
    $country_options[$country[0]] = $country[1];
    $result = array_map('trim', $country_options);
  }
  if(count($result) > 1) {
    $form['list_of_countries'] = array(
      '#type' => 'select',
      '#options' => $result,
      '#weight' => 1,
      '#default_value' => $selected_country,
      '#required' => TRUE,
      '#attributes' => array(
        'tabindex' => '1',
      ),
    );
  }

  //day
  $form['day'] = array(
    '#type'         => 'textfield',
    '#size'         => 2,
    '#maxlength'    => 2,
    '#id'           => 'age_checker_day',
    '#weight'       => variable_get($selected_country . '_day_format'),
    '#attributes'   => array(
      'pattern'     => "[0-9]*",
      'tabindex'    => '2',
      'placeholder' => variable_get($selected_country . '_day_placeholder'),
      ),
    '#required' => TRUE,
    );
  //month
  $form['month'] = array(
    '#type'          => 'textfield',
    '#size'          => 2,
    '#maxlength'     => 2,
    '#id'            => 'age_checker_month',
    '#weight'       => variable_get($selected_country . '_month_format'),
    '#attributes'   => array(
      'pattern'     => "[0-9]*",
      'tabindex'    => '3',
      'placeholder' => variable_get($selected_country . '_month_placeholder'),
      ),
    '#required' => TRUE,
    );
  //year
  $form['year'] = array(
    '#type'          => 'textfield',
    '#size'          => 4,
    '#maxlength'     => 4,
    '#id'            => 'age_checker_year',
    '#weight'       => variable_get($selected_country . '_year_format'),
    '#attributes' => array(
      'pattern' => "[0-9]*",
      'tabindex' => '4',
      'placeholder' => variable_get($selected_country . '_year_placeholder'),
      ),
    '#required' => TRUE,
    );
  //remember me checkbox
  $option_remember_me = variable_get('option_remember_me', '');
    if ($option_remember_me == 1) {
  $form['remember_me'] = array(
    '#type' => 'checkbox',
    '#weight' => 6,
    '#title' => t('Remember my details (Do not select on shared computers)'),
    '#default_value' => 0,
    '#attributes' => array(
      'tabindex' => '5',
      ),
    );
  }
  //submit button
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'submit',
    '#weight' => 7,
    '#attributes' => array(
      'onclick'   => "age_checker.verify();",
      'tabindex' => '6',
    ),
   );
  return $form;
}
/**
 * Implements hook_theme().
 */
function age_checker_theme($existing, $type, $theme, $path) {
  return array(
    'age_checker' => array(
      'path' => AGE_GATE_TEMPLATE_PATH,
      'template' => 'age_checker',
      'variables' => array(
        'age_cheker_background_img' => NULL,
        'age_cheker_logo' => NULL,
        'age_checker_header_message' => NULL,
        'age_checker_form' => NULL, 
        'age_checker_cookies_declaration' => NULL,
        'age_checker_drinking_statement' => NULL,
        'age_checker_copyright' => NULL,
      ),
    ),
  );
}

/**
 * Function agechecker_template
 */
function agechecker_template() {
  //background image
  $fid_bgimg = variable_get('age_checker_background_image', '');
  $file_bgimg = file_load($fid_bgimg);
  $uri_bgimg  = $file_bgimg->uri;
  //logo
  $fid_logo = variable_get('age_checker_logo', '');
  $file_logo = file_load($fid_logo);
  $uri_logo  = $file_logo->uri;
  
  //getting all values from age_checker_mapping_admin_form
  $languages = variable_get('language', '');
  $languages = explode("\n", $languages);
  $languages_options = array();
  foreach ($languages as $language) {
    $language = explode('|', $language);
    $languages_options[$language[0]] = $language[0];
    $languages_result = array_map('trim', $languages_options);
  }
  $age_gate_cookies = array();

  $selected_country = isset($_COOKIE['country_selected']) ? $_COOKIE['country_selected'] : '';
  if (!isset($selected_country) || $selected_country == '') {
    $selected_country = _get_country_name();
  }
  dsm($selected_country);
  foreach ($languages_result as $language_result) {
    $age_checker_header_message = variable_get($language_result . 'age_checker_header_message', '');
    $age_checker_header_message_array[$language_result] = $age_checker_header_message;
        
    $age_checker_cookies_declaration = variable_get($language_result . 'age_checker_cookies_declaration', '');
    $age_checker_cookies_declaration_array[$language_result] = $age_checker_cookies_declaration;
       
    $age_checker_drinking_statement = variable_get($language_result . 'age_checker_drinking_statement', '');
    $age_checker_drinking_statement_array[$language_result] = $age_checker_drinking_statement;
    $age_checker_copyright = variable_get($language_result . 'age_checker_copyright', '');
    $country_list = variable_get($language_result . 'country_list', '');
    $country_list_array[$language_result] = $country_list;
    $age_gate_cookies[$language_result] = array('age_checker_header_message' => 
    $age_checker_header_message_array, 'countries' => $country_list_array);
    $_COOKIES['age_gate'] = $age_gate_cookies;
  }
  dsm($_COOKIES['age_gate']);
  //storing age_checker_form into $form variable  
  $age_checker_form = drupal_get_form('age_checker_form');
  //cookies description
  $age_checker_cookies_declaration = '*This site uses cookies. By providing your age, you are agreeing to the use of cookies as described in our privacy notice.';
  //age checker copyright
  $age_checker_copyright = 'Copyright Â© Site name 2015';
  //responsible drinking statement
  $age_checker_drinking_statement = 'For the people over the age of 21 only';
  //sending variable to template
  return theme('age_checker', 
    array(
    'age_cheker_background_img' => theme('image', array('path' => $uri_bgimg)),
    'age_cheker_logo' => theme('image', array('path' => $uri_logo)),
    'age_checker_header_message' => $age_checker_header_message, 
    'age_checker_form' => $age_checker_form,
    'age_checker_cookies_declaration' => $age_checker_cookies_declaration,
    'age_checker_drinking_statement' => $age_checker_drinking_statement,
    'age_checker_copyright' => $age_checker_copyright,
  ));
}

/**
 * Implements a function to get country name.
 */
function _get_geoip_data($url) {

  // Free GeoIP configuration.
  $request = drupal_http_request($url);
  if (is_object($request) || is_object(json_decode($request->data))) {
    $response = json_decode($request->data);
    if (!is_object($response) || $response->country_code == 'RD') {
      return FALSE;
    }
    return $response;
  }
  else{
    return FALSE;
  }
}

function _get_country_name() {
  $ip_address = ip_address();
  //error_log($ip_address);
  $url = 'http://freegeoip.net/json/' . $ip_address;
  $geoip_data = _get_geoip_data($url);
  if(is_object($geoip_data)) {
    $country_code = $geoip_data->country_code;
    $countries = variable_get('countries', '');
    $countries = explode("\n", $countries);
    foreach ($countries as $country) {
      $country_array = explode('|', $country);
      $country_list[$country_array[0]] = $country_array[1];
    }
    $country_name = isset($country_list[$country_code]) ? $country_list[$country_code] : '';
    if (isset($country_name) || $country_name !== '') {
      $country_name = $country_code;
    }
    else {
      $country_name = variable_get('default_country');
    }
  }
  else {
    $country_name = variable_get('default_country');
  }
  return $country_name;
}